{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_Ops_dev",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_Ops_dev",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          season as short,",
				"          team1 as string,",
				"          team2 as string,",
				"          date as date,",
				"          match_number as short,",
				"          venue as string,",
				"          city as string,",
				"          toss_winner as string,",
				"          toss_decision as string,",
				"          player_of_match as string,",
				"          umpire1 as string,",
				"          umpire2 as string,",
				"          reserve_umpire as string,",
				"          match_referee as string,",
				"          winner as string,",
				"          winner_runs as short,",
				"          winner_wickets as short,",
				"          match_type as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'dev',",
				"     fileName: 'matches.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 select(mapColumn(",
				"          season,",
				"          team1,",
				"          team2,",
				"          date,",
				"          venue,",
				"          city,",
				"          winner,",
				"          match_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive({Repair$Date} = currentDate(),",
				"          {RowValue$$$$$} = \"Surya\",",
				"          SURYA_TEJA_DATE_COLUMN = team1,",
				"          {APPROVED_WINS$LOSS_$$$$} = date) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     fileSystem: 'dev',",
				"     compressionCodec: 'snappy',",
				"     partitionFileNames:['matches.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}